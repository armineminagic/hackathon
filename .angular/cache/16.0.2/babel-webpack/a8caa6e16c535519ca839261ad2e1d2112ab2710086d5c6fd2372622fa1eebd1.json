{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ChatService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    // private url = \"https://endpoint-cognigy.cafewell.com/7c36930e5923ea0d805a089021c0c7fd461d6b9f0d29db7bd8c292ca959393d1\";\n    this.url = \"https://topik.cafewell.com/api/topik/predict_topic\";\n    this.model = JSON.parse('{\"userId\":\"userId\", \"sessionId\":\"\",\"text\":\"testing\", \"data\": {\"key\":\"12\"}}');\n  }\n  makePayload(message) {\n    console.log();\n    return \"{\\\"question\\\":\\\"\" + message + \"\\\", \\\"version\\\":2}\";\n  }\n  sendMessage(message) {\n    console.log(this.makePayload(message));\n    var response;\n    const headers = {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': '*',\n      'Access-Control-Allow-Headers': '*'\n    };\n    return this.httpClient.post(this.url, this.makePayload(message), {\n      headers\n    });\n  }\n}\nChatService.ɵfac = function ChatService_Factory(t) {\n  return new (t || ChatService)(i0.ɵɵinject(i1.HttpClient));\n};\nChatService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ChatService,\n  factory: ChatService.ɵfac,\n  providedIn: 'root'\n});\nexport { ChatService };","map":{"version":3,"names":["ChatService","constructor","httpClient","url","model","JSON","parse","makePayload","message","console","log","sendMessage","response","headers","post","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/armin.eminagic/hackathon/hackathon/src/app/services/chat.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, switchMap, throwError } from 'rxjs';\n// import { Root } from '../models/ResponseModel';\nimport { Root } from '../models/Model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  // private url = \"https://endpoint-cognigy.cafewell.com/7c36930e5923ea0d805a089021c0c7fd461d6b9f0d29db7bd8c292ca959393d1\";\n\n  private url = \"https://topik.cafewell.com/api/topik/predict_topic\";\n\n  private makePayload(message: String) {\n    console.log()\n    return \"{\\\"question\\\":\\\"\" + message + \"\\\", \\\"version\\\":2}\";\n  }  \n\n  model: Root = JSON.parse('{\"userId\":\"userId\", \"sessionId\":\"\",\"text\":\"testing\", \"data\": {\"key\":\"12\"}}');\n\n  sendMessage(message: String) : Observable<Object> {\n    console.log(this.makePayload(message));\n    var response: Root | undefined;\n    const headers = {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin':'*',\n      'Access-Control-Allow-Methods': '*',\n      'Access-Control-Allow-Headers': '*'\n    }\n    return this.httpClient.post(this.url, this.makePayload(message), {headers});\n  }\n}\n"],"mappings":";;AAMA,MAGaA,WAAW;EAEtBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAE9B;IAEQ,KAAAC,GAAG,GAAG,oDAAoD;IAOlE,KAAAC,KAAK,GAASC,IAAI,CAACC,KAAK,CAAC,4EAA4E,CAAC;EAXxD;EAMtCC,WAAWA,CAACC,OAAe;IACjCC,OAAO,CAACC,GAAG,EAAE;IACb,OAAO,kBAAkB,GAAGF,OAAO,GAAG,oBAAoB;EAC5D;EAIAG,WAAWA,CAACH,OAAe;IACzBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,WAAW,CAACC,OAAO,CAAC,CAAC;IACtC,IAAII,QAA0B;IAC9B,MAAMC,OAAO,GAAG;MACd,cAAc,EAAE,kBAAkB;MAClC,6BAA6B,EAAC,GAAG;MACjC,8BAA8B,EAAE,GAAG;MACnC,8BAA8B,EAAE;KACjC;IACD,OAAO,IAAI,CAACX,UAAU,CAACY,IAAI,CAAC,IAAI,CAACX,GAAG,EAAE,IAAI,CAACI,WAAW,CAACC,OAAO,CAAC,EAAE;MAACK;IAAO,CAAC,CAAC;EAC7E;;AAzBWb,WAAW,C;mBAAXA,WAAW,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXlB,WAAW,C;SAAXA,WAAW;EAAAmB,OAAA,EAAXnB,WAAW,CAAAoB,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPrB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}